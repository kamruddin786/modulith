apiVersion: apps/v1
kind: Deployment
metadata:
  name: modulith
  labels:
    app: modulith
spec:
  # Reduced to 1 replica for local development to conserve resources
  replicas: 1
  selector:
    matchLabels:
      app: modulith
  template:
    metadata:
      labels:
        app: modulith
    spec:
      # Add init containers to wait for dependencies
      initContainers:
      - name: wait-for-postgres
        command:
        - sh
        - -c
        - until pg_isready -h postgres -p 5432; do echo waiting for postgres; sleep 2; done;
        image: postgres:16-alpine
      - name: wait-for-rabbitmq
        command:
        - sh
        - -c
        - until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
        image: busybox:1.36
      containers:
      - name: modulith
        image: modulith:latest
        # Use IfNotPresent for local development to avoid unnecessary pulls
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "local"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: db-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: db-password
        - name: SPRING_RABBITMQ_HOST
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: rabbitmq-host
        - name: SPRING_RABBITMQ_PORT
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: rabbitmq-port
        - name: SPRING_RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: rabbitmq-username
        - name: SPRING_RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: modulith-secrets
              key: rabbitmq-password
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: modulith
spec:
  selector:
    app: modulith
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
  # Use NodePort for easy local access via localhost:30080
  type: NodePort